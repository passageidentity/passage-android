plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id "org.openapi.generator" version "6.3.0"
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.8.21'
    id 'maven-publish'
    id 'signing'
}

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'maven-publish'
apply plugin: 'signing'

group = "id.passage.android"
version = "1.7.5"

android {
    namespace 'id.passage.android'
    compileSdk 34

    defaultConfig {
        minSdk 28 // Minimum support for Credentials Manager - ie passkeys
        targetSdk 34
        versionCode 15
        versionName "1.7.5"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    
    buildFeatures {
        buildConfig = true
    }

    buildTypes {
        debug {
            buildConfigField "String", "MAILOSAUR_API_KEY", "\"${System.getenv('MAILOSAUR_API_KEY') ?: ''}\""
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildTypes.configureEach { buildType ->
        buildType.consumerProguardFiles 'proguard-rules.pro'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main {
            kotlin {
                srcDir("$projectDir/generated/src/main/kotlin")
            }
        }
    }

    publishing {
        singleVariant('release') {
            withSourcesJar()
        }
    }
}

dependencies {
    // Android core dependencies
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.10.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // For testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    implementation 'androidx.test.espresso:espresso-intents:3.5.1'
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    androidTestImplementation "com.google.truth:truth:1.1.3"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.1'
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.1"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.0"

    // For simplifying network requests
    implementation "com.squareup.okhttp3:okhttp:4.10.0"

    // For JSON serialization and parsing
    implementation "com.squareup.moshi:moshi:1.14.0"
    implementation "com.squareup.moshi:moshi-adapters:1.14.0"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:1.14.0"


    // For safely encrypting stored data
    implementation "androidx.security:security-crypto:1.1.0-alpha06"

    // For Android Credentials support
    implementation "androidx.credentials:credentials:1.2.0"

    // Needed for credentials support from play services, for devices running
    // Android 13 (sdk 33) and below.
    implementation "androidx.credentials:credentials-play-services-auth:1.2.0"

    // For oauth2 support
    implementation 'androidx.browser:browser:1.7.0'
    implementation "com.google.android.libraries.identity.googleid:googleid:1.1.0"
}

openApiGenerate {
    generatorName = "kotlin"
    remoteInputSpec = "https://api.swaggerhub.com/apis/passage/passage-auth-api/1"
    outputDir = "$projectDir/generated".toString()
    apiPackage = "id.passage.android.api"
    modelPackage = "id.passage.android.model"
    configOptions = [
            "apiSuffix": "API",
            "enumPropertyNaming": "camelCase",
            "moshiCodeGen": "true",
            "packageName": "id.passage.client",
            "useCoroutines": "true",
    ]
}

tasks.register('updateGeneratedCode', Exec) {
    dependsOn 'openApiGenerate'
    workingDir "$projectDir"
    commandLine "python3", "fix_generated_code.py"
    doLast {
        println 'updateGeneratedCode script executed successfully.'
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.name
            version project.version

            afterEvaluate {
                from components.release
            }

            pom {
                name = "Passage"
                description = 'Native passkey authentication for your Android app'
                url = 'https://github.com/passageidentity/passage-android'
                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://github.com/passageidentity/passage-android/blob/main/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'rickycpadilla'
                        name = 'Ricky Padilla'
                        email = 'ricky.padilla@passage.id'
                    }
                }
                scm {
                    connection = 'scm:git:github.com/passageidentity/passage-android.git'
                    developerConnection = 'scm:git:ssh://github.com/passageidentity/passage-android.git'
                    url = 'https://github.com/passageidentity/passage-android'
                }
            }
        }
    }

    repositories {
        maven {
            name = "OSSRH"
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = project.findProperty("ossrhUsername") ?: System.getenv("OSSRH_USERNAME")
                password = project.findProperty("ossrhPassword") ?: System.getenv("OSSRH_PASSWORD")
            }
        }
    }
}

signing {
    useGpgCmd()
    sign publishing.publications.mavenJava
}
